Vagrant::Config.run do |config|
  # ===========================================================================
  #
  # Node Identity
  #
  # You shouldn't need to mess with anything but this section

  # cloud we're targeting
  cluster          = 'cocina'
  facet            = 'chef_server'
  facet_index      = '1'
  node_name        = "#{cluster}-#{facet}-#{facet_index}"
  host_network_ip  = "33.33.33.21"
  chef_server_url  = "http://localhost:4000"
  chef_environment = "vm_dev"

  # ===========================================================================
  #
  # Configure VM
  #

  # Home for credentials and machine-specific setup
  cluster_privates_dir = File.expand_path("../../knife/#{cluster}/", File.dirname(__FILE__))

  # box to build off of.
  config.vm.box = "cluster-chef-natty"

  # Boot with a GUI so you can see the screen. (Default is headless)
  config.vm.boot_mode = :gui

  # Host only network IP lets you access it via the IP.
  config.vm.network  host_network_ip

  # Mount this to see all our chefs and stuff: [type, vm_path, host_path]
  config.vm.share_folder "homebase", "/cloud", "../.."


  config.vm.customize do |vm|
    # Name the VM
    vm.name        = node_name
    # Bump up the memory
    vm.memory_size = 640
    # Use the host resolver for DNS so that VPN continues to work within the VM
    vm.network_adapters.each do |na|
      if na.enabled? && na.nat_driver
        na.nat_driver.dns_use_host_resolver = true
      end
    end
  end

  # ===========================================================================
  #
  # Provision with chef
  #

  # Enable provisioning with chef solo, specifying a cookbooks path (relative
  # to this Vagrantfile), and adding some recipes and/or roles.
  #
  config.vm.provision :chef_solo do |chef|
    #
    chef.node_name         = node_name
    #
    chef.provisioning_path = '/etc/chef'
    chef.cookbooks_path    = [:vm, "/cloud"]
    chef.roles_path        = [:vm, "/cloud"]
    chef.data_bags_path    = [:vm, "/cloud"]
    #
    chef.add_role       :base_role
    chef.add_role       :chef_client
    chef.add_role       :ssh
    # chef.add_role     :nfs_client
    #
    chef.add_recipe     'cloud_utils::virtualbox_metadata'
    chef.add_recipe     'chef-server::rubygems-install'
    #
    chef.json = {
      "cluster_name"    => cluster,
      "facet_name"      => facet,
      "facet_index"     => facet_index,
      "chef_server_url" => chef_server_url,

      "chef_server" => {
        "server_url"    => chef_server_url,
        "init_style"    => "runit",
        "webui_enabled" => true,
        "validation_client_name" => "#{cluster}-validator",
        "validation_client_file" => "/etc/chef/#{cluster}-validator.pem",
        "solr_heap_size"         => "128M"
      },
      #
      "nfs" => { "mounts" => [
          ["/home/#{ENV['USER']}", { "owner" => ENV['USER'], "remote_path" => ENV['HOME'] } ],
        ] },
      "package_set" => {
        "install"       => [ "base", "dev", "sysadmin", "text", "vagrant", "cluster_chef", "xml" ],
        "gems"          => { "cluster_chef" => %w[ cluster_chef ] }
      },
      "tuning"          => { "swappiness" => "60", "overcommit_memory" => "1", "overcommit_ratio" => "100" },
      "java"            => { "install_flavor" =>"sun" },
      "apt"             => { "cloudera" => { "force_distro" => "maverick" } },
      "volumes" => {
        "root"          => { "tags" => { "scratch" => true }, "mount_point" => "/", "device" => "/dev/mapper/natty--base-root", "mountable" => false }
      }
    }
  end

end
