export ES_CONF_DIR=${ES_CONF_DIR-<%= @elasticsearch[:conf_dir] %>}
export ES_DATA_DIR=${ES_DATA_DIR-<%= @elasticsearch[:data_root] %>/data}
export ES_WORK_DIR=${ES_WORK_DIR-<%= @elasticsearch[:data_root] %>/work}

export CLASSPATH=$ES_HOME/plugins/cloud-aws.zip
CLASSPATH=$CLASSPATH:$ES_HOME/lib/elasticsearch-*.jar:$ES_HOME/lib/*:$ES_HOME/lib/sigar/*
export ES_CLASSPATH=$CLASSPATH

if [ "x$ES_MIN_MEM" = "x" ]; then
  ES_MIN_MEM=256m
fi
if [ "x$ES_MAX_MEM" = "x" ]; then
  ES_MAX_MEM=1500m
fi

# Arguments to pass to the JVM
JAVA_OPTS="$JAVA_OPTS -Xms${ES_MIN_MEM}"
JAVA_OPTS="$JAVA_OPTS -Xmx${ES_MAX_MEM}"
JAVA_OPTS="$JAVA_OPTS -Xss128k"

JAVA_OPTS="$JAVA_OPTS -Djline.enabled=true"

JAVA_OPTS="$JAVA_OPTS -XX:+AggressiveOpts"

JAVA_OPTS="$JAVA_OPTS -XX:+UseParNewGC"
JAVA_OPTS="$JAVA_OPTS -XX:+UseConcMarkSweepGC"
JAVA_OPTS="$JAVA_OPTS -XX:+CMSParallelRemarkEnabled"
JAVA_OPTS="$JAVA_OPTS -XX:SurvivorRatio=8"
JAVA_OPTS="$JAVA_OPTS -XX:MaxTenuringThreshold=1"
JAVA_OPTS="$JAVA_OPTS -XX:+HeapDumpOnOutOfMemoryError"
JAVA_OPTS="$JAVA_OPTS -XX:HeapDumpPath=$ES_WORK_DIR/heap"

<% if node[:kernel][:machine] == 'x86_64' -%>
# run compressed pointers to save on heap
JAVA_OPTS="$JAVA_OPTS -XX:+UseCompressedOops"
<% end -%>

# ensures JMX accessible from outside world
JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.ssl=false"
JAVA_OPTS="$JAVA_OPTS -Dcom.sun.management.jmxremote.authenticate=false"
JAVA_OPTS="$JAVA_OPTS -Djava.rmi.server.hostname=<%= @elasticsearch[:jmx_dash_addr] %>"

# More options to consider LATER
# java.net.preferIPv4Stack=true: Better OOTB experience, especially with jgroups
#  -XX:CMSInitiatingOccupancyFraction=88 

ES_JAVA_OPTS="$ES_JAVA_OPTS -Des.path.data=$ES_DATA_DIR -Des.path.work=$ES_WORK_DIR -Des.path.conf=$ES_CONF_DIR"

export JAVA_OPTS ES_JAVA_OPTS ES_MAX_MEM ES_MIN_MEM

       

